<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectName>luajit2</ProjectName>
    <ProjectGuid>{9F35C2BB-DF1E-400A-A829-AE34E1C91A70}</ProjectGuid>
    <RootNamespace>luajit2</RootNamespace>
    <Keyword>Win32Proj</Keyword>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>15.0.26730.12</_ProjectFileVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>..\..\..\..\..\build\</OutDir>
    <IntDir>..\..\..\intermediate\vs2005_$(Platform)_$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <OutDir>..\..\..\..\..\build\</OutDir>
    <IntDir>..\..\..\intermediate\vs2005_$(Platform)_$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <PreBuildEvent>
      <Command>if not exist "..\..\..\intermediate\vs2005_$(Platform)" md "..\..\..\intermediate\vs2005_$(Platform)"
buildvm32 -m peobj -o "$(IntDir)lj_vm32.obj"
buildvm32 -m bcdef -o "..\..\..\intermediate\vs2005_$(Platform)\lj_bcdef.h" lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
buildvm32 -m ffdef -o "..\..\..\intermediate\vs2005_$(Platform)\lj_ffdef.h" lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
buildvm32 -m libdef -o "..\..\..\intermediate\vs2005_$(Platform)\lj_libdef.h" lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
buildvm32 -m recdef -o "..\..\..\intermediate\vs2005_$(Platform)\lj_recdef.h" lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
buildvm32 -m folddef -o "..\..\..\intermediate\vs2005_$(Platform)\lj_folddef.h" lj_opt_fold.c</Command>
    </PreBuildEvent>
    <ClCompile>
      <Optimization>Full</Optimization>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\dynasm;..\..\..\intermediate\vs2005_$(Platform);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;_CRT_SECURE_NO_DEPRECATE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <ProgramDataBaseFileName>$(OutDir)luajit2_$(Platform).pdb</ProgramDataBaseFileName>
      <DebugInformationFormat />
      <CompileAs>CompileAsC</CompileAs>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;_CRT_SECURE_NO_DEPRECATE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\dynasm;..\..\..\intermediate\vs2005_$(Platform);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>$(OutDir)luajit2_$(Platform).lib</OutputFile>
      <AdditionalLibraryDirectories>$(IntDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/MACHINE:X86 /nodefaultlib "$(IntDir)lj_vm32.obj" %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <PreBuildEvent>
      <Command>if not exist "..\..\..\intermediate\vs2005_$(Platform)" md "..\..\..\intermediate\vs2005_$(Platform)"
buildvm64 -m peobj -o "$(IntDir)lj_vm64.obj"
buildvm64 -m bcdef -o "..\..\..\intermediate\vs2005_$(Platform)\lj_bcdef.h" lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
buildvm64 -m ffdef -o "..\..\..\intermediate\vs2005_$(Platform)\lj_ffdef.h" lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
buildvm64 -m libdef -o "..\..\..\intermediate\vs2005_$(Platform)\lj_libdef.h" lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
buildvm64 -m recdef -o "..\..\..\intermediate\vs2005_$(Platform)\lj_recdef.h" lib_base.c lib_math.c lib_bit.c lib_string.c lib_table.c lib_io.c lib_os.c lib_package.c lib_debug.c lib_jit.c lib_ffi.c
buildvm64 -m folddef -o "..\..\..\intermediate\vs2005_$(Platform)\lj_folddef.h" lj_opt_fold.c</Command>
    </PreBuildEvent>
    <Midl>
      <TargetEnvironment>X64</TargetEnvironment>
    </Midl>
    <ClCompile>
      <Optimization>Full</Optimization>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\dynasm;..\..\..\intermediate\vs2005_$(Platform);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>NDEBUG;_CRT_SECURE_NO_DEPRECATE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <ProgramDataBaseFileName>$(OutDir)luajit2_$(Platform).pdb</ProgramDataBaseFileName>
      <DebugInformationFormat />
      <CompileAs>CompileAsC</CompileAs>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>NDEBUG;_CRT_SECURE_NO_DEPRECATE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)..\dynasm;..\..\..\intermediate\vs2005_$(Platform);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Lib>
      <OutputFile>$(OutDir)luajit2_$(Platform).lib</OutputFile>
      <AdditionalLibraryDirectories>$(IntDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>/MACHINE:X64 /nodefaultlib "$(IntDir)lj_vm64.obj" %(AdditionalOptions)</AdditionalOptions>
    </Lib>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="lauxlib.h" />
    <ClInclude Include="lj_alloc.h" />
    <ClInclude Include="lj_arch.h" />
    <ClInclude Include="lj_asm.h" />
    <ClInclude Include="lj_asm_arm.h" />
    <ClInclude Include="lj_asm_mips.h" />
    <ClInclude Include="lj_asm_ppc.h" />
    <ClInclude Include="lj_asm_x86.h" />
    <ClInclude Include="lj_bc.h" />
    <ClInclude Include="lj_bcdump.h" />
    <ClInclude Include="lj_carith.h" />
    <ClInclude Include="lj_ccall.h" />
    <ClInclude Include="lj_ccallback.h" />
    <ClInclude Include="lj_cconv.h" />
    <ClInclude Include="lj_cdata.h" />
    <ClInclude Include="lj_char.h" />
    <ClInclude Include="lj_clib.h" />
    <ClInclude Include="lj_cparse.h" />
    <ClInclude Include="lj_crecord.h" />
    <ClInclude Include="lj_ctype.h" />
    <ClInclude Include="lj_debug.h" />
    <ClInclude Include="lj_def.h" />
    <ClInclude Include="lj_dispatch.h" />
    <ClInclude Include="lj_emit_arm.h" />
    <ClInclude Include="lj_emit_mips.h" />
    <ClInclude Include="lj_emit_ppc.h" />
    <ClInclude Include="lj_emit_x86.h" />
    <ClInclude Include="lj_err.h" />
    <ClInclude Include="lj_errmsg.h" />
    <ClInclude Include="lj_ff.h" />
    <ClInclude Include="lj_ffrecord.h" />
    <ClInclude Include="lj_frame.h" />
    <ClInclude Include="lj_func.h" />
    <ClInclude Include="lj_gc.h" />
    <ClInclude Include="lj_gdbjit.h" />
    <ClInclude Include="lj_ir.h" />
    <ClInclude Include="lj_ircall.h" />
    <ClInclude Include="lj_iropt.h" />
    <ClInclude Include="lj_jit.h" />
    <ClInclude Include="lj_lex.h" />
    <ClInclude Include="lj_lib.h" />
    <ClInclude Include="lj_mcode.h" />
    <ClInclude Include="lj_meta.h" />
    <ClInclude Include="lj_obj.h" />
    <ClInclude Include="lj_parse.h" />
    <ClInclude Include="lj_record.h" />
    <ClInclude Include="lj_snap.h" />
    <ClInclude Include="lj_state.h" />
    <ClInclude Include="lj_str.h" />
    <ClInclude Include="lj_strscan.h" />
    <ClInclude Include="lj_tab.h" />
    <ClInclude Include="lj_target.h" />
    <ClInclude Include="lj_target_arm.h" />
    <ClInclude Include="lj_target_mips.h" />
    <ClInclude Include="lj_target_ppc.h" />
    <ClInclude Include="lj_target_x86.h" />
    <ClInclude Include="lj_trace.h" />
    <ClInclude Include="lj_traceerr.h" />
    <ClInclude Include="lj_udata.h" />
    <ClInclude Include="lj_vm.h" />
    <ClInclude Include="lj_vmevent.h" />
    <ClInclude Include="lua.h" />
    <ClInclude Include="luaconf.h" />
    <ClInclude Include="luajit.h" />
    <ClInclude Include="lualib.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="lib_aux.c" />
    <ClCompile Include="lib_base.c" />
    <ClCompile Include="lib_bit.c" />
    <ClCompile Include="lib_debug.c" />
    <ClCompile Include="lib_ffi.c" />
    <ClCompile Include="lib_init.c" />
    <ClCompile Include="lib_io.c" />
    <ClCompile Include="lib_jit.c" />
    <ClCompile Include="lib_math.c" />
    <ClCompile Include="lib_os.c" />
    <ClCompile Include="lib_package.c" />
    <ClCompile Include="lib_string.c" />
    <ClCompile Include="lib_table.c" />
    <ClCompile Include="lj_alloc.c" />
    <ClCompile Include="lj_api.c" />
    <ClCompile Include="lj_asm.c" />
    <ClCompile Include="lj_bc.c" />
    <ClCompile Include="lj_bcread.c" />
    <ClCompile Include="lj_bcwrite.c" />
    <ClCompile Include="lj_carith.c" />
    <ClCompile Include="lj_ccall.c" />
    <ClCompile Include="lj_ccallback.c" />
    <ClCompile Include="lj_cconv.c" />
    <ClCompile Include="lj_cdata.c" />
    <ClCompile Include="lj_char.c" />
    <ClCompile Include="lj_clib.c" />
    <ClCompile Include="lj_cparse.c" />
    <ClCompile Include="lj_crecord.c" />
    <ClCompile Include="lj_ctype.c" />
    <ClCompile Include="lj_debug.c" />
    <ClCompile Include="lj_dispatch.c" />
    <ClCompile Include="lj_err.c" />
    <ClCompile Include="lj_ffrecord.c" />
    <ClCompile Include="lj_func.c" />
    <ClCompile Include="lj_gc.c" />
    <ClCompile Include="lj_gdbjit.c" />
    <ClCompile Include="lj_ir.c" />
    <ClCompile Include="lj_lex.c" />
    <ClCompile Include="lj_lib.c" />
    <ClCompile Include="lj_load.c" />
    <ClCompile Include="lj_mcode.c" />
    <ClCompile Include="lj_meta.c" />
    <ClCompile Include="lj_obj.c" />
    <ClCompile Include="lj_opt_dce.c" />
    <ClCompile Include="lj_opt_fold.c" />
    <ClCompile Include="lj_opt_loop.c" />
    <ClCompile Include="lj_opt_mem.c" />
    <ClCompile Include="lj_opt_narrow.c" />
    <ClCompile Include="lj_opt_sink.c" />
    <ClCompile Include="lj_opt_split.c" />
    <ClCompile Include="lj_parse.c" />
    <ClCompile Include="lj_record.c" />
    <ClCompile Include="lj_snap.c" />
    <ClCompile Include="lj_state.c" />
    <ClCompile Include="lj_str.c" />
    <ClCompile Include="lj_strscan.c" />
    <ClCompile Include="lj_tab.c" />
    <ClCompile Include="lj_trace.c" />
    <ClCompile Include="lj_udata.c" />
    <ClCompile Include="lj_vmevent.c" />
    <ClCompile Include="lj_vmmath.c" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="buildvm.vs8.vcxproj">
      <Project>{f949c208-7a2e-4b1c-b74d-956e88542a26}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
    <ProjectReference Include="minilua.vs8.vcxproj">
      <Project>{531911bc-0023-4ec6-a2ce-6c3f5c182647}</Project>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>